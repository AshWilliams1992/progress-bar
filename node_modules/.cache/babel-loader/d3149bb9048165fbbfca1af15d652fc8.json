{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simone\\\\Documents\\\\WebDesign\\\\_Testing\\\\progress-bar\\\\src\\\\template\\\\Main.js\";\nimport React, { Component } from 'react';\n\nclass ProgressComp extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      id: this.props.id,\n      className: this.props.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      value: this.props.value,\n      className: \"percent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, this.props.num), React.createElement(\"div\", {\n      style: {\n        width: this.props.num\n      },\n      className: \"back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Button extends React.Component {\n  changeBar(e) {\n    let number = document.querySelector(\".progressBar.selected .percent\");\n    let back = document.querySelector(\".progressBar.selected .back\");\n    let initialVal = number.getAttribute(\"value\");\n    let val = e.target.value;\n\n    if (val.indexOf('-') == -1) {\n      console.log('Positive!');\n      back.classList.remove(\"error\");\n      let calc = val + initialVal;\n\n      if (calc > 100) {\n        back.style.width = \"100%\";\n        back.classList.add(\"error\");\n      } else {\n        back.style.width = calc + \"%\";\n      }\n\n      number.innerHTML = calc + \"%\";\n    } else {\n      console.log('Negative!');\n    }\n\n    console.log(initialVal);\n    console.log(val);\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      value: this.props.value,\n      onClick: this.changeBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.props.value);\n  }\n\n}\n\nclass SelectBox extends React.Component {\n  selectBar(e) {\n    let idProgress = e.target.value;\n    const progressEl = document.getElementsByClassName(\"progressBar\");\n    console.log(idProgress);\n\n    for (let i = 0; i < progressEl.length; i++) {\n      progressEl[i].classList.remove(\"selected\");\n    }\n\n    document.getElementById(idProgress).classList.add(\"selected\");\n  }\n\n  render() {\n    return React.createElement(\"select\", {\n      onChange: this.selectBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.props.value.map((value, index) => React.createElement(\"option\", {\n      key: index,\n      value: 'progress' + index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Progress \", index + 1)));\n  }\n\n}\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      progData: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://pb-api.herokuapp.com/bars').then(response => {\n      return response.json();\n    }).then(data => {\n      this.setState({\n        progData: data,\n        loading: false\n      });\n    }).catch(error => {\n      this.setState({\n        error\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          progData = _this$state.progData,\n          loading = _this$state.loading,\n          error = _this$state.error;\n\n    if (error) {\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Something went wrong...\"));\n    } else if (loading) {\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Please wait...\"));\n    } else {\n      // Log correctly\n      console.log(progData.bars);\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        id: \"progressBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, progData && progData.bars && progData.bars.map((value, index) => React.createElement(ProgressComp, {\n        class: index == 0 ? \"progressBar selected\" : \"progressBar\",\n        key: index,\n        id: 'progress' + index,\n        value: value,\n        num: value + '%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }))), React.createElement(\"section\", {\n        id: \"controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"choose\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Choose your progress bar:\"), progData && progData.bars && React.createElement(SelectBox, {\n        value: progData.bars,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"change\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Change your progress bar:\"), progData && progData.buttons && progData.buttons.map((value, index) => React.createElement(Button, {\n        key: index,\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })))));\n    }\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/Simone/Documents/WebDesign/_Testing/progress-bar/src/template/Main.js"],"names":["React","Component","ProgressComp","render","props","id","class","value","num","width","Button","changeBar","e","number","document","querySelector","back","initialVal","getAttribute","val","target","indexOf","console","log","classList","remove","calc","style","add","innerHTML","SelectBox","selectBar","idProgress","progressEl","getElementsByClassName","i","length","getElementById","map","index","Main","constructor","state","loading","progData","componentDidMount","fetch","then","response","json","data","setState","catch","error","bars","buttons"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ProgressComp extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id={this.props.id} className={this.props.class}>\r\n                <div value={this.props.value} className=\"percent\">{this.props.num}</div>\r\n                <div style={{ width: this.props.num }} className=\"back\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Button extends React.Component {\r\n\r\n    changeBar(e) {\r\n\r\n        let number = document.querySelector(\".progressBar.selected .percent\");\r\n        let back = document.querySelector(\".progressBar.selected .back\");\r\n\r\n        let initialVal = number.getAttribute(\"value\");\r\n        let val = e.target.value;\r\n\r\n        if (val.indexOf('-') == -1) {\r\n            console.log('Positive!');\r\n            back.classList.remove(\"error\");\r\n            let calc = val + initialVal;\r\n\r\n            if (calc > 100) {\r\n                back.style.width = \"100%\";\r\n                back.classList.add(\"error\");\r\n            } else {\r\n                back.style.width = calc + \"%\";\r\n            }\r\n\r\n            number.innerHTML = calc + \"%\";\r\n\r\n        } else {\r\n            console.log('Negative!');\r\n\r\n\r\n        }\r\n\r\n        console.log(initialVal);\r\n        console.log(val);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <button value={this.props.value} onClick={this.changeBar}>\r\n                {this.props.value}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nclass SelectBox extends React.Component {\r\n\r\n    selectBar(e) {\r\n        let idProgress = e.target.value;\r\n        const progressEl = document.getElementsByClassName(\"progressBar\");\r\n        console.log(idProgress);\r\n\r\n        for (let i = 0; i < progressEl.length; i++) {\r\n            progressEl[i].classList.remove(\"selected\");\r\n        }\r\n        document.getElementById(idProgress).classList.add(\"selected\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <select onChange={this.selectBar}>\r\n                {\r\n                    this.props.value.map((value, index) =>\r\n                        <option key={index} value={'progress' + index}>Progress {index + 1}</option>\r\n                    )\r\n                }\r\n            </select>\r\n        );\r\n    }\r\n}\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            progData: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://pb-api.herokuapp.com/bars')\r\n            .then(response => { return response.json(); })\r\n            .then((data) => { this.setState({ progData: data, loading: false }) })\r\n            .catch((error) => { this.setState({ error }) });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { progData, loading, error } = this.state;\r\n\r\n        if (error) {\r\n            return <main><span>Something went wrong...</span></main>;\r\n        } else if (loading) {\r\n            return <main><h2>Please wait...</h2></main>;\r\n        } else {\r\n            // Log correctly\r\n            console.log(progData.bars);\r\n            return (\r\n                <main>\r\n                    <section id=\"progressBox\">\r\n                        {progData && progData.bars && (\r\n                            progData.bars.map((value, index) =>\r\n                                <ProgressComp class={index == 0 ? \"progressBar selected\" : \"progressBar\"} key={index} id={'progress' + index} value={value} num={value + '%'} />\r\n                            )\r\n                        )}\r\n                    </section>\r\n\r\n                    <section id=\"controls\">\r\n\r\n                        <div className=\"choose\">\r\n                            <span>Choose your progress bar:</span>\r\n                            {progData && progData.bars && (\r\n                                <SelectBox value={progData.bars} />\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"change\">\r\n                            <span>Change your progress bar:</span>\r\n                            {progData && progData.buttons && (\r\n                                progData.buttons.map((value, index) =>\r\n                                    <Button key={index} value={value} />\r\n                                )\r\n                            )}\r\n                        </div>\r\n\r\n                    </section>\r\n                </main>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}