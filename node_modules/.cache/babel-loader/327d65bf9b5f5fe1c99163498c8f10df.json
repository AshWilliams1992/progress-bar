{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simone\\\\Documents\\\\WebDesign\\\\_Testing\\\\progress-bar\\\\src\\\\template\\\\Main.js\";\nimport React, { Component } from 'react';\n\nclass ProgressComp extends Component {\n  percentBar() {\n    let percentOfLimit = Math.round(this.props.info.val * 100 / this.props.limit) + '%';\n    return percentOfLimit;\n  }\n\n  render() {\n    let _this$props = this.props,\n        barActive = _this$props.barActive,\n        info = _this$props.info,\n        action = _this$props.action;\n    let className = barActive === info.index ? \"progressBar selected\" : \"progressBar\";\n    return React.createElement(\"div\", {\n      className: className,\n      onClick: () => action(info.index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"percent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, this.percentBar()), React.createElement(\"div\", {\n      className: \"back\",\n      style: {\n        width: this.percentBar()\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Button extends Component {\n  changeValue() {\n    const btnValue = this.props.value;\n    const limit = this.props.limit;\n    const barInfo = this.props.bar;\n    const progressActive = document.getElementsByClassName(\"progressBar\")[barInfo.index];\n    let number = progressActive.querySelector(\".percent\");\n    let back = progressActive.querySelector(\".back\");\n\n    if (val.indexOf('-') === -1) {\n      console.log('Positive!');\n      let initPercent = Math.round(barInfo.val * 100 / limit);\n      let valPercent = Math.round(btnValue * 100 / limit);\n      let calcPercent = initPercent + valPercent;\n      let calc = parseInt(barInfo.val) + parseInt(btnValue);\n      back.classList.remove(\"error\");\n\n      if (calcPercent > 100) {\n        back.style.width = \"100%\";\n        back.classList.add(\"error\");\n      } else {\n        back.style.width = calcPercent + \"%\";\n      }\n\n      number.innerHTML = calcPercent + \"%\"; // number.setAttribute(\"value\", calc); - Creare azione\n    } else {\n      console.log('Negative!');\n      let valPos = btnValue * -1; //- Transform to positive to do calc\n\n      let initPercent = Math.round(barInfo.val * 100 / limit);\n      let valPercent = Math.round(valPos * 100 / limit);\n      let calcPercent = initPercent - valPercent;\n      let calc = parseInt(barInfo.val) - parseInt(valPos);\n\n      if (calcPercent < 0) {\n        back.style.width = \"0%\";\n        number.innerHTML = \"0%\"; //number.setAttribute(\"value\", 0); - Creare azione\n      } else {\n        back.style.width = calcPercent + \"%\";\n        number.innerHTML = calcPercent + \"%\"; //number.setAttribute(\"value\", calc);  - Creare azione\n\n        if (calcPercent < 100) {\n          back.classList.remove(\"error\");\n        }\n      }\n    }\n  }\n\n  render() {\n    const valueBar = this.props.value;\n    return React.createElement(\"button\", {\n      onClick: () => this.changeValue(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, valueBar < 0 ? valueBar + \" $\" : \"+\" + valueBar + \" $\");\n  }\n\n}\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.changeBar = this.changeBar.bind(this);\n    this.changeVal = this.changeVal.bind(this);\n    this.state = {\n      loading: true,\n      bars: [],\n      buttons: [],\n      limit: 0,\n      selectedBar: 0 // First one on init\n\n    };\n  }\n\n  componentDidMount() {\n    //- API call data get\n    //- Setting first bar selected\n    fetch('https://pb-api.herokuapp.com/bars').then(response => {\n      return response.json();\n    }).then(data => {\n      // Manage data bars\n      let arrayBar = data.bars.map(function (x, i) {\n        return {\n          index: i,\n          val: x\n        };\n      });\n      this.setState({\n        loading: false,\n        bars: arrayBar,\n        buttons: data.buttons,\n        limit: data.limit\n      });\n    }).catch(error => {\n      this.setState({\n        error\n      });\n    });\n  }\n\n  changeBar(val) {\n    this.setState({\n      selectedBar: val\n    });\n  }\n\n  changeVal(val) {\n    this.setState({\n      bars: val\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          bars = _this$state.bars,\n          buttons = _this$state.buttons,\n          limit = _this$state.limit,\n          selectedBar = _this$state.selectedBar,\n          loading = _this$state.loading,\n          error = _this$state.error;\n\n    if (error) {\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Something went wrong...\"));\n    } else if (loading) {\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Please wait...\"));\n    } else {\n      // Log correctly\n      console.log(\"Progress bars: \" + JSON.stringify(bars));\n      console.log(\"Buttons: \" + buttons, \"Limit: \" + limit, \"Bar Selected: \" + selectedBar);\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        id: \"progressBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Choose your progress bar:\"), React.createElement(\"div\", {\n        className: \"choose\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, bars && bars.map((barInfo, index) => React.createElement(ProgressComp, {\n        key: index,\n        info: barInfo,\n        barActive: selectedBar,\n        limit: limit,\n        action: this.changeBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })))), React.createElement(\"section\", {\n        id: \"controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"change\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Add or remove money:\"), buttons && buttons.map((value, index) => React.createElement(Button, {\n        key: index,\n        value: value,\n        limit: limit,\n        bar: bars[selectedBar],\n        action: this.changeVal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      })))), React.createElement(\"section\", {\n        id: \"limit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Budget limit: \", limit, \"$ \", React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"(limit = 100%)\"))));\n    }\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/Simone/Documents/WebDesign/_Testing/progress-bar/src/template/Main.js"],"names":["React","Component","ProgressComp","percentBar","percentOfLimit","Math","round","props","info","val","limit","render","barActive","action","className","index","width","Button","changeValue","btnValue","value","barInfo","bar","progressActive","document","getElementsByClassName","number","querySelector","back","indexOf","console","log","initPercent","valPercent","calcPercent","calc","parseInt","classList","remove","style","add","innerHTML","valPos","valueBar","Main","constructor","changeBar","bind","changeVal","state","loading","bars","buttons","selectedBar","componentDidMount","fetch","then","response","json","data","arrayBar","map","x","i","setState","catch","error","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ProgressComp extends Component {\r\n\r\n    percentBar() {\r\n        let percentOfLimit = Math.round(this.props.info.val * 100 / this.props.limit) + '%';\r\n        return percentOfLimit;\r\n    }\r\n\r\n    render() {\r\n\r\n        let { barActive, info, action } = this.props;\r\n\r\n        let className = (barActive === info.index) ? \"progressBar selected\" : \"progressBar\";\r\n\r\n        return (\r\n            <div className={className} onClick={() => action(info.index)} >\r\n                <div className=\"percent\">{this.percentBar()}</div>\r\n                <div className=\"back\" style={{ width: this.percentBar() }}></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Button extends Component {\r\n\r\n    changeValue() {\r\n\r\n        const btnValue = this.props.value;\r\n        const limit = this.props.limit;\r\n        const barInfo = this.props.bar;\r\n\r\n        const progressActive = document.getElementsByClassName(\"progressBar\")[barInfo.index];\r\n        let number = progressActive.querySelector(\".percent\");\r\n        let back = progressActive.querySelector(\".back\");\r\n\r\n        if (val.indexOf('-') === -1) {\r\n\r\n            console.log('Positive!');\r\n\r\n            let initPercent = Math.round(barInfo.val * 100 / limit);\r\n            let valPercent = Math.round(btnValue * 100 / limit);\r\n            let calcPercent = initPercent + valPercent;\r\n            let calc = parseInt(barInfo.val) + parseInt(btnValue);\r\n\r\n            back.classList.remove(\"error\");\r\n\r\n            if (calcPercent > 100) {\r\n                back.style.width = \"100%\";\r\n                back.classList.add(\"error\");\r\n            } else {\r\n                back.style.width = calcPercent + \"%\";\r\n            }\r\n\r\n            number.innerHTML = calcPercent + \"%\";\r\n            // number.setAttribute(\"value\", calc); - Creare azione\r\n\r\n        } else {\r\n\r\n            console.log('Negative!');\r\n\r\n            let valPos = btnValue * -1; //- Transform to positive to do calc\r\n\r\n            let initPercent = Math.round(barInfo.val * 100 / limit);\r\n            let valPercent = Math.round(valPos * 100 / limit);\r\n            let calcPercent = initPercent - valPercent;\r\n            let calc = parseInt(barInfo.val) - parseInt(valPos);\r\n\r\n            if (calcPercent < 0) {\r\n                back.style.width = \"0%\";\r\n                number.innerHTML = \"0%\";\r\n                //number.setAttribute(\"value\", 0); - Creare azione\r\n            } else {\r\n                back.style.width = calcPercent + \"%\";\r\n                number.innerHTML = calcPercent + \"%\";\r\n                //number.setAttribute(\"value\", calc);  - Creare azione\r\n\r\n                if (calcPercent < 100) {\r\n                    back.classList.remove(\"error\");\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const valueBar = this.props.value;\r\n\r\n        return (\r\n            <button onClick={() => this.changeValue()}>\r\n                {(valueBar < 0) ? valueBar + \" $\" : \"+\" + valueBar + \" $\"}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeBar = this.changeBar.bind(this);\r\n        this.changeVal = this.changeVal.bind(this);\r\n        this.state = {\r\n            loading: true,\r\n            bars: [],\r\n            buttons: [],\r\n            limit: 0,\r\n            selectedBar: 0 // First one on init\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        //- API call data get\r\n        //- Setting first bar selected\r\n\r\n        fetch('https://pb-api.herokuapp.com/bars')\r\n            .then(response => { return response.json(); })\r\n            .then((data) => {\r\n\r\n                // Manage data bars\r\n                let arrayBar = data.bars.map(function (x, i) {\r\n                    return {\r\n                        index: i,\r\n                        val: x\r\n                    };\r\n                });\r\n\r\n                this.setState({\r\n                    loading: false,\r\n                    bars: arrayBar,\r\n                    buttons: data.buttons,\r\n                    limit: data.limit\r\n                })\r\n            })\r\n            .catch((error) => { this.setState({ error }) });\r\n\r\n    }\r\n\r\n    changeBar(val) {\r\n        this.setState({\r\n            selectedBar: val\r\n        })\r\n    }\r\n\r\n    changeVal(val) {\r\n        this.setState({\r\n            bars: val,\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { bars, buttons, limit, selectedBar, loading, error } = this.state;\r\n\r\n        if (error) {\r\n            return <main><span>Something went wrong...</span></main>;\r\n        } else if (loading) {\r\n            return <main><h2>Please wait...</h2></main>;\r\n        } else {\r\n\r\n            // Log correctly\r\n            console.log(\r\n                \"Progress bars: \" + JSON.stringify(bars)\r\n            );\r\n\r\n            console.log(\r\n                \"Buttons: \" + buttons,\r\n                \"Limit: \" + limit,\r\n                \"Bar Selected: \" + selectedBar\r\n            );\r\n\r\n            return (\r\n                <main>\r\n                    <section id=\"progressBox\">\r\n                        <span>Choose your progress bar:</span>\r\n                        <div className=\"choose\">\r\n                            {bars && (\r\n                                bars.map((barInfo, index) =>\r\n                                    <ProgressComp\r\n                                        key={index}\r\n                                        info={barInfo}\r\n                                        barActive={selectedBar}\r\n                                        limit={limit}\r\n                                        action={this.changeBar}\r\n                                    />\r\n                                )\r\n                            )}\r\n                        </div>\r\n                    </section>\r\n\r\n                    <section id=\"controls\">\r\n                        <div className=\"change\">\r\n                            <span>Add or remove money:</span>\r\n                            {buttons && (\r\n                                buttons.map((value, index) =>\r\n                                    <Button\r\n                                        key={index}\r\n                                        value={value}\r\n                                        limit={limit}\r\n                                        bar={bars[selectedBar]}\r\n                                        action={this.changeVal}\r\n                                    />\r\n                                )\r\n                            )}\r\n                        </div>\r\n                    </section>\r\n\r\n                    <section id=\"limit\">\r\n                        <span>Budget limit: {limit}$ <i>(limit = 100%)</i></span>\r\n                    </section>\r\n                </main>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}